name: Build

on:
  pull_request:
    branches:
      - main
      - test
      - "release-[0-9].[0-9]+"
    paths-ignore:
      - "**.md"
  push:
    branches:
      - main
      - test
      - "release-[0-9].[0-9]+"
    tags:
      - "v*"
    paths-ignore:
      - "**.md"

env:
  IMAGE_NAME: "quay.io/morana/kserve/modelmesh-runtime-adapter"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Quay
        run: docker login -u ${{ secrets.QUAY_ROBOT_USERNAME || 'morana' }} -p ${{ secrets.QUAY_ROBOT_SECRET || 'Cgkc6cGY0aAgyqDboVQceocJuH5Vw7CSs+FZ/x4KDYGTTMSun/eTYydqZqSLw3kPpq8HOeDseHPOcAMEQmwJLA=='}} quay.io

      - name: Export docker build args
        run: |
          # see: scripts/build_docker.sh

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Generate PR tag from github.ref == "refs/pull/123/merge"
          [ "$VERSION" == "merge" ] && VERSION=$(echo "${{ github.ref }}" | sed -e 's,refs/pull/\(.*\)/merge,pr-\1,')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "test" ] && VERSION=latest

          git_commit_sha="$(git rev-parse HEAD)"
          DOCKER_TAG="$(git rev-parse --abbrev-ref HEAD)-$(date -u +"%Y%m%dT%H%M%S%Z")"

          echo "IMAGE_TAG=$VERSION"           >> $GITHUB_ENV
          echo "COMMIT_SHA=$git_commit_sha"   >> $GITHUB_ENV
          echo "IMAGE_VERSION=$DOCKER_TAG"    >> $GITHUB_ENV

          # print env vars for debugging
          cat "$GITHUB_ENV"

      - name: Build and push runtime image
        uses: docker/build-push-action@v4
        with:
          # tensorflow not supported on PowerPC (ppc64le) or System Z (s390x)
          # https://pypi.org/project/tensorflow/2.12.0/#files
          # https://github.com/tensorflow/tensorflow/issues/46181
          platforms: linux/amd64,linux/arm64,linux/s390x
          context: .
          target: runtime
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.IMAGE_NAME }}:latest
          build-args: |
            IMAGE_VERSION=${{ env.IMAGE_VERSION }}
            COMMIT_SHA=${{ env.COMMIT_SHA }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
